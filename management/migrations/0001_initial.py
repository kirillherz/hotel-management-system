# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-05-02 20:43
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Additional_payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.IntegerField(verbose_name='Количество')),
            ],
            options={
                'verbose_name': 'Дополнительный платёж',
                'verbose_name_plural': 'Дополнительные платежи',
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('middle_name', models.CharField(max_length=50, verbose_name='Отчество')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('country', models.CharField(max_length=50, verbose_name='Страна')),
                ('city', models.CharField(max_length=50, verbose_name='Город')),
                ('passport_series', models.IntegerField(verbose_name='Серия паспорта')),
                ('passport_id', models.IntegerField(verbose_name='Номер паспорта')),
                ('issued', models.CharField(max_length=200, verbose_name='Кем выдан')),
                ('date_of_birth', models.DateField(verbose_name='Дата рождения')),
                ('date_in', models.DateField(verbose_name='Дата въезда')),
                ('date_out', models.DateField(verbose_name='Дата выезда')),
                ('total', models.DecimalField(decimal_places=2, max_digits=19, verbose_name='Итог')),
            ],
            options={
                'verbose_name': 'Запись о регистрации',
                'verbose_name_plural': 'Записи о регистрации',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Номер комнаты')),
                ('is_free', models.BooleanField(verbose_name='Свободна/занята')),
            ],
            options={
                'verbose_name': 'Комната',
                'verbose_name_plural': 'Комнаты',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Сервис')),
                ('price', models.DecimalField(decimal_places=2, max_digits=19, verbose_name='Стоимость')),
            ],
            options={
                'verbose_name': 'Сервис',
                'verbose_name_plural': 'Сервисы',
            },
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название тариффа')),
                ('units', models.IntegerField(verbose_name='Единицы')),
            ],
            options={
                'verbose_name': 'Тариф',
                'verbose_name_plural': 'Тарифы',
            },
        ),
        migrations.CreateModel(
            name='Unit_of_measurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Полное название')),
                ('reduction', models.CharField(max_length=50, verbose_name='Сокращение')),
            ],
            options={
                'verbose_name': 'Единица измерения',
                'verbose_name_plural': 'Единицы измерения',
            },
        ),
        migrations.CreateModel(
            name='Valuta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('abbreviation', models.CharField(max_length=20, verbose_name='Сокращение')),
            ],
            options={
                'verbose_name': 'Валюта',
                'verbose_name_plural': 'Валюта',
            },
        ),
        migrations.AddField(
            model_name='tariff',
            name='valuta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Valuta', verbose_name='Валюта'),
        ),
        migrations.AddField(
            model_name='room',
            name='tariff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Tariff', verbose_name='Тариф'),
        ),
        migrations.AddField(
            model_name='record',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Room', verbose_name='Комната'),
        ),
        migrations.AddField(
            model_name='additional_payment',
            name='record',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Record'),
        ),
        migrations.AddField(
            model_name='additional_payment',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Service', verbose_name='Сервис'),
        ),
        migrations.AddField(
            model_name='additional_payment',
            name='unit_of_measurement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Unit_of_measurement', verbose_name='Единица измерения'),
        ),
    ]
